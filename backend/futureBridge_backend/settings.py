"""
Django settings for futureBridge_backend project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/#djangosettings
"""
import os
from dotenv import load_dotenv
import dj_database_url # dj-database-url paketi kurulu varsayılıyor (pip install dj-database-url)

# .env dosyasını backend klasöründen yükle
# Load environment variables from .env file in the backend directory
load_dotenv(os.path.join(os.path.dirname(__file__), os.pardir, '.env'))


from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# Get Django's secret key from environment variables
SECRET_KEY = os.getenv('SECRET_KEY', 'varsayilan-cok-guclu-olmayan-anahtar') # Ortam değişkeninden oku


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True # Set to False in production!

# Allowed hosts for your Django application
ALLOWED_HOSTS = ['192.168.182.3', '127.0.0.1', 'localhost','10.192.20.220','192.168.182.27','192.168.200.192','10.196.191.59','192.168.182.238','192.168.200.192'
                 ,'10.196.191.59'
                 ] # IP adresinizi ekledik


# Application definition

INSTALLED_APPS = [
    'corsheaders',
    'django.contrib.admin', # Django Admin panel
    'django.contrib.auth', # Django Authentication system
    'django.contrib.contenttypes', # Content type system
    'django.contrib.sessions', # Session framework
    'django.contrib.messages', # Messaging framework
    'django.contrib.staticfiles', # Static files serving

    'rest_framework', # Django REST Framework
    'profiles.apps.ProfilesConfig', # Your custom profiles app

    # Add other custom apps here as you create them
    # 'messages_app.apps.MessagesAppConfig',
    # 'recommendations_app.apps.RecommendationsAppConfig',
    # etc.
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware', # Django authentication middleware
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'futureBridge_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'futureBridge_backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# Configure database from DATABASE_URL environment variable
DATABASES = {
    'default': dj_database_url.config(default=os.getenv('DATABASE_URL'))
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us' # You might want to change this to 'tr-tr'

TIME_ZONE = 'UTC' # Use UTC is recommended

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField' # Recommended default


# Django REST Framework settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'profiles.authentication.SupabaseJWTAuthentication', # Your custom Supabase JWT authentication class
        'rest_framework.authentication.SessionAuthentication', # Optional: needed for DRF browsable API and Admin site
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated', # Default permission: require authentication for most views
    ),
}

# Supabase JWT Settings (Used by your custom authentication class)
SUPABASE_JWT_SECRET = os.getenv('JWT_SECRET_KEY') # Read JWT Secret from environment variable
SUPABASE_AUDIENCE = os.getenv('SUPABASE_AUDIENCE', 'authenticated') # Read Audience from env, default to 'authenticated'
GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")

# Eğer anahtar yoksa hata fırlatabilirsiniz (isteğe bağlı)
if not GEMINI_API_KEY:
    raise EnvironmentError("GEMINI_API_KEY ortam değişkeni ayarlanmamış.")

# === MODEL DEFINITIONS SHOULD NOT BE HERE ===
# === THEY MUST BE IN YOUR APPS' models.py FILES ===
# from django.db import models # DELETE THIS LINE if it's at the end
# import uuid # DELETE THIS LINE if it's at the end
# class User(models.Model): # DELETE THIS ENTIRE BLOCK and all subsequent model blocks
#    ...
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173", # <-- Web frontend'inizin adresi
    "http://127.0.0.1:5173", # <-- Bazen 127.0.0.1 de gerekebilir
    # Üretim ortamında web sitenizin gerçek URL'sini buraya ekleyeceksiniz
    # "https://your-production-website.com",
]